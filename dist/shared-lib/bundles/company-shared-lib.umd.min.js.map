{"version":3,"sources":["ng://@company/shared-lib/lib/list.service.ts","ng://@company/shared-lib/lib/list/list-container/list.component.ts","ng://@company/shared-lib/lib/list/list.module.ts","ng://@company/shared-lib/lib/border/border.directive.ts","ng://@company/shared-lib/lib/border/border.module.ts"],"names":["ListService","this","message$","Subject","prototype","setMessage","message","next","getMessage","asObservable","Injectable","args","providedIn","ListComponent","ngOnInit","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","ListModule","NgModule","declarations","exports","imports","CommonModule","BorderDirective","elementRef$","element$","nativeElement","style","border","Directive","ElementRef","BorderModule"],"mappings":"mZAAA,IAAAA,EAAA,WAGA,SAAAA,IAIUC,KAAAC,SAA4B,IAAIC,EAAAA,eAExCH,EAAAI,UAAAC,WAAA,SAAWC,GACTL,KAAKC,SAASK,KAAKD,IAGrBN,EAAAI,UAAAI,WAAA,WACE,OAAOP,KAAKC,SAASO,oCAXxBC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,kHAJd,GCAA,IAAAC,EAAA,WAgBE,SAAAA,KAGF,OADEA,EAAAT,UAAAU,SAAA,iCAXDC,EAAAA,UAASJ,KAAA,CAAC,CACTK,SAAU,UACVC,SAAA,+HAEAC,gBAAiBC,EAAAA,wBAAwBC,oHAGxCC,EAAAA,SAKHR,EAnBA,GCAA,IAAAS,EAAA,WAIA,SAAAA,KAKyB,2BALxBC,EAAAA,SAAQZ,KAAA,CAAC,CACRa,aAAc,CAACX,GACfY,QAAS,CAACZ,GACVa,QAAS,CAACC,EAAAA,kBAEaL,EATzB,GCAAM,EAAA,WAQE,SAAAA,EAAoBC,GAAA5B,KAAA4B,YAAAA,EAClB5B,KAAK6B,SAAWD,EAAYE,cAMhC,OAHEH,EAAAxB,UAAAU,SAAA,WACEb,KAAK6B,SAASE,MAAMC,OAAS,qCAXhCC,EAAAA,UAASvB,KAAA,CAAC,CACTK,SAAU,0DAHQmB,EAAAA,cAepBP,EAfA,GCAA,IAAAQ,EAAA,WAIA,SAAAA,KAK2B,2BAL1Bb,EAAAA,SAAQZ,KAAA,CAAC,CACRa,aAAc,CAACI,GACfH,QAAS,CAACG,GACVF,QAAS,CAACC,EAAAA,kBAEeS,EAT3B","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ListService {\n  private message$: Subject<string> = new Subject<string>();\n\n  setMessage(message: any) {\n    this.message$.next(message);\n  }\n\n  getMessage(): Observable<any> {\n    return this.message$.asObservable();\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n} from '@angular/core';\n\n@Component({\n  selector: 'sl-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListComponent implements OnInit {\n  @Input() list: string[];\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ListComponent } from './list-container/list.component';\n\n@NgModule({\n  declarations: [ListComponent],\n  exports: [ListComponent],\n  imports: [CommonModule],\n})\nexport class ListModule {}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[slBorder]',\n})\nexport class BorderDirective implements OnInit {\n  private element$: HTMLElement;\n\n  constructor(private elementRef$: ElementRef) {\n    this.element$ = elementRef$.nativeElement;\n  }\n\n  ngOnInit() {\n    this.element$.style.border = 'solid 1px red';\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BorderDirective } from './border.directive';\n\n@NgModule({\n  declarations: [BorderDirective],\n  exports: [BorderDirective],\n  imports: [CommonModule],\n})\nexport class BorderModule {}\n"]}